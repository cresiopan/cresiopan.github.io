#+title:Simulación de eventos discretos y Teoría de colas

* Simulación de sistemas - Eventos discretos

** Programación orientada a actividades, eventos y procesos

En el caso que el sistema esté evolucionando todo el tiempo:

Tiempo continuo

Tiempo discreto

Hay casos en las que es irrelevante simular un sistema todo el tiempo. Por
ejemplo, imaginemos el caso de un depósito (Warehouse) donde se despachan
productos de acuerdo a pedidos que entran en cualquier momento y es necesario ir
actualizando el stock de productos.

Las variables (inventario) son DISCRETAS

Las variables cambian cuando tiene lugar un EVENTO (despacho de producto,
reposición de stock, etc.)

Simulación con distintas ACTIVIDADES que se empiezan, se desarrollan y terminan
(en paralelo)

** Software de Simulación

SIMULA: Desarrollado en los años 1960’s en el Norwegian Computing Center en Oslo. Este
lenguaje introdujo el concepto de programación orientada a objetos.

General Purpose Simulation System (GPSS): Desarrollado por IBM en los años 1960’s.

SOFWARE MODERNO DE SIMULACIÓN
- Comsol Multiphysics
- Matlab Simulink

EN ESTE CURSO (clases prácticas):
- Simpy: Simulación de sistemas con eventos discretos y colas.

* Teoría de colas
** Introducción

Recursos limitados (computadoras, sistemas de comunicaciones, etc.)  compartidos
en una comunidad de usuarios.

Los usuarios solicitan acceso a recursos en tiempos aleatorios.

Uso del recurso durante un tiempo limitado aleatorio.

Cuando el recurso esta ocupado el usuario permanece en una lista de espera
(cola).

TEORÍA DE COLAS permite estudiar estadísticamente el comportamiento de las
listas de espera y uso de recursos compartidos, permitiendo cuantificar y
optimizar: demoras, tiempos de proceso promedios, etc.

Componentes de un sistema de colas 

: for example, First In, First Out (FIFO).
: from the arrival time of the i-th customer until the time it enters
 service.
Service time

Motivación para el estudio de colas (I) 9

Motivación para el estudio de colas (II) 10
??
Debemos desarrollar teoría basada en probabilidad para tomar
decisiones con criterio científico

Notación de Kendall a/b/m/K 11
a: Tipo de proceso de arribos
b: Distribución tiempo de servicio
m: Número de servers
K: Máximo número de clientes en el sistema
a = M: Poisson (iid exp.)
b = M: iid exponencial
 D: constante,
 G: alguna distrib.
Agner Krarup Erlang, un ingeniero danés, publicó un paper en 1909 introduciendo
la teoría de colas aplicado a telefonía.
M/D/1 (1917) y M/D/m (1920): modelado de sistema de telefonía
M/M/1
M/M/m

Fórmula de Little 12
En el estado estacionario, el número promedio de clientes en el sistema es igual al
producto de la tasa de arribo promedio y el tiempo promedio en el sistema.
, y

Aplicaciones de la fórmula de Little (I) 13

Aplicaciones de la fórmula de Little (II) 14

Aplicaciones de la fórmula de Little (III) 15

Aplicaciones de la fórmula de Little (IV) 16

Aplicaciones de la fórmula de Little (V) 17
Material de Lectura
- Leer para la próxima clase:
Libros (Mínimo):
[15] Probability,_Statistics,_and_Random_Processes_for_Eletrical_Engineerging, 3rd Ed Leon-Garcia,
Cap. 12.
Libros (opcional):
[16] Performance-Modeling-and-Design-of-Computer-Systems-Queueing-Theory-in-Action, Caps. 1-2.
[17] Probability Statistics and Queueing Theory With Computer Science Applications-Arnold_O_Allen,
Cap. 5.
- Material de lectura (esta clase):
Libros (Mínimo):
[7] A Discrete-Event Simulation Course Based on the SimPy Language - Norm Matloff, University of
California, 2011.
[15] Probability,_Statistics,_and_Random_Processes_for_Eletrical_Engineerging, 3rd Ed Leon-Garcia,
Cap. 12.
Web:
[8] https://simpy.readthedocs.io/en/latest/ (Simpy documentation)
Libros (opcional):
[16] Performance-Modeling-and-Design-of-Computer-Systems-Queueing-Theory-in-Action, Caps. 1-2.
[17] Probability Statistics and Queueing Theory With Computer Science Applications-Arnold_O_Allen,
Cap. 5.
