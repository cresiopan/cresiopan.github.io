#+title:Diseno Relacional I
#+date:
* Introducción
Criterios de un buen diseño relacional
- Preservación de información
- Redundancia mínima

Cuando se parte de un correcto diseño conceptual y se hace un
correcto pasaje al modelo lógico, se obtiene un esquema sin
redundancia y se preserva toda la información del mundo real que
se quería modelar.

Pero, ¿cómo verificamos un esquema relacional? ¿cómo
corregimos un esquema que fue mal diseñado?

La teoría del diseño relacional formaliza estos requisitos a través
de las formas normales.
* Dependencias funcionales
** Definición
Dada una relación R, una dependencia funcional X → Y , con X , Y ⊂ R es una
restricción sobre las posibles tuplas de R que implica que dos tuplas con igual
valor del conjunto de atributos X deben también tener igual valor del conjunto
de atributos Y .

Ésto es:
$$\forall s, t \in \mathbb{R}: s[X] \rightarrow s[Y] = t[Y]$$

La dependencia funcional X → Y implica que hay una relación
funcional entre los valores de X y los de Y dentro de la base de
datos.

Las dependencias funcionales se definen a partir de la semántica
de los datos. ¡No es posible inferirlas viendo los datos!
* Formas normales: 1FN, 2FN, 3FN, FNBC
Las formas normales son una serie de estructuras con las que un esquema de base
de datos puede cumplir ó no.

Las formas normales clásicas son:
- Primera forma normal (1FN) (E. Codd, 1970)
- Segunda forma normal (2FN) (E. Codd, 1971)
- Tercera forma normal (3FN) (E. Codd, 1971)
- Forma normal Boyce-Codd (FNBC) (R. Boyce E. Codd, 1974)
- Cuarta forma normal (4FN) (R. Fagin, 1977)
- Quinta forma normal (5FN) (R. Fagin, 1979)

Cada forma normal es más fuerte que las anteriores –en el orden
en que las hemos introducido–. Entonces:
$$S \text{ está en } 5FN \rightarrow S \text{ está en } 4 FN \rightarrow \dots S
\text{ está en } 2FN \rightarrow S \text{ está en } 1FN$$

En 1972 E. Codd propuso el concepto de normalización como el
proceso a través del cual se convierte un esquema de base de
datos en uno equivalente (i.e., que preserva toda la
información) y que cumple con una determinada forma normal.

El objetivo es:
- Preservar la información
- Eliminar la redundancia
- Evitar las anomalías de ABM

Partiremos de un conjunto de dependencias funcionales que
supondremos definido por el diseñador de la base de datos.

** Primera forma normal (1FN)
*** Definición
Decimos que un esquema de base de datos relacional está en
primera forma normal (1FN) cuando los dominios de todos sus
atributos sólo permiten valores atómicos (es decir, indivisibles) y
monovaluados.

Actualmente, se considera que en el modelo relacional todos los
atributos deben ser monovaluados y atómicos.

Con este criterio, todo esquema relacional está ya en 1FN.

Pero, ¿cómo lo resolveríamos si éste no fuera el caso?

| nombre_profesor | mail                                      |
| Juan Gómez      | {jgomez@udbc.com.ar, jgomez94@mibase.com} |
| Roberta Casas   | {rcasas@udbc.com.ar, rcasas@ggmail.com}   |
| Irene Adler     | {iadler@udbc.com.ar}                      |

*** Situación
Situación:
| nombre_profesor | mail                                      |
| Juan Gómez      | {jgomez@udbc.com.ar, jgomez94@mibase.com} |
| Roberta Casas   | {rcasas@udbc.com.ar, rcasas@ggmail.com}   |
| Irene Adler     | {iadler@udbc.com.ar}                      |

Solución 1:

Colocar un mail por tupla y repetir el nombre del profesor.

| nombre_profesor | mail                |
| Juan Gómez      | jgomez@udbc.com.ar  |
| Juan Gómez      | jgomez94@mibase.com |
| Roberta Casas   | rcasas@udbc.com.ar  |
| Roberta Casas   | rcasas@ggmail.com   |
| Irene Adler     | iadler@udbc.com.ar  |



Situación:
| nombre_profesor | mail                                      |
| Juan Gómez      | {jgomez@udbc.com.ar, jgomez94@mibase.com} |
| Roberta Casas   | {rcasas@udbc.com.ar, rcasas@ggmail.com}   |
| Irene Adler     | {iadler@udbc.com.ar}                      |

Solución 2:

Suponer un máximo posible M de mails y tener M atributos
distintos reservados a tal fin. Para profesores que tienen menos
de M mails, quedarán valores nulos.

| nombre_profesor | mail1              | mail2                 |
| Juan Gómez      | jgomez@udbc.com.ar | jgomez94@mibase.com   |
| Roberta Casas   | rcasas@udbc.com.ar | rcasas@ggmail.com     |
| Irene Adler     | iadler@udbc.com.ar | NULL                  |

*** Normalización
Supongamos ahora un ejemplo algo más complejo:

| nombre_dpto | nombre_profesor | asignatura | mail                                      |
| Física      | Juan Gómez      | Física II  | {jgomez@udbc.com.ar, jgomez94@mibase.com} |
| Física      | Roberta Casas   | Física II  | {rcasas@udbc.com.ar, rcasas@ggmail.com}   |
| Física      | Juan Gómez      | Física III | {jgomez@udbc.com.ar, jgomez94@mibase.com} |
| Matemática  | Roberta Casas   | Topología  | {rcasas@udbc.com.ar, rcasas@ggmail.com}   |
| Matemática  | Irene Adler     | Álgebra I  | {iadler@udbc.com.ar}                      |

Forma 1

Identificamos la clave de la relación y movemos el atributo multivaluado a una
nueva relación junto con la clave. El atributo pasa a ser parte de la clave en
la nueva relación.

| nombre_dpto | nombre_profesor | asignatura   |
| Física      | Juan Gómez      | Física II    |
| Física      | Roberta Casas   | Física II    |
| Física      | Juan Gómez      | Física III   |
| Matemática  | Roberta Casas   | Topología    |
| Matemática  | Irene Adler     | Álgebra I    |

| nombre_profesor | asignatura | mail                |
| Juan Gómez      | Física II  | jgomez@udbc.com.ar  |
| Juan Gómez      | Física II  | jgomez94@mibase.com |
| Roberta Casas   | Física II  | rcasas@udbc.com.ar  |
| Roberta Casas   | Física II  | rcasas@ggmail.com   |
| Juan Gómez      | Física III | jgomez@udbc.com.ar  |
| Juan Gómez      | Física III | jgomez94@mibase.com |
| Roberta Casas   | Topología  | rcasas@udbc.com.ar  |
| Roberta Casas   | Topología  | rcasas@ggmail.com   |
| Irene Adler     | Álgebra I  | iadler@udbc.com.ar  |

Forma 2

Generamos una tupla distinta por cada valor del atributo multivaluado en cada
tupla.

| nombre_dpto | nombre_profesor | asignatura | mail                |
| Física      | Juan Gómez      | Física II  | jgomez@udbc.com.ar  |
| Física      | Juan Gómez      | Física II  | jgomez94@mibase.com |
| Física      | Roberta Casas   | Física II  | rcasas@udbc.com.ar  |
| Física      | Roberta Casas   | Física II  | rcasas@ggmail.com   |
| Física      | Juan Gómez      | Física III | jgomez@udbc.com.ar  |
| Física      | Juan Gómez      | Física III | jgomez94@mibase.com |
| Matemática  | Roberta Casas   | Topología  | rcasas@udbc.com.ar  |
| Matemática  | Roberta Casas   | Topología  | rcasas@ggmail.com   |
| Matemática  | Irene Adler     | Álgebra I  | iadler@udbc.com.ar  |

Defecto: Genera más información redundante.

Forma 3

Si establecemos una cantidad máxima de valores, podemos generar un atributo
distinto para cada posible valor. En algunas tuplas, algunos de los atributos
quedarán en NULL.

| nombre_dpto | nombre_profesor | asignatura | mail1              | mail2                 |
| Física      | Juan Gómez      | Física II  | jgomez@udbc.com.ar | jgomez94@mibase.com   |
| Física      | Roberta Casas   | Física II  | rcasas@udbc.com.ar | rcasas@ggmail.com     |
| Física      | Juan Gómez      | Física III | jgomez@udbc.com.ar | jgomez94@mibase.com   |
| Matemática  | Roberta Casas   | Topología  | rcasas@udbc.com.ar | rcasas@ggmail.com     |
| Matemática  | Irene Adler     | Álgebra I  | iadler@udbc.com.ar | NULL                  |

Defectos: Produce una cantidad de valores nulos, y no se adapta a atributos
multivaluados sin límites.

** d

* Dependencias multivaluadas y 4FN
* Dependencias de junta y 5FN
* Bibliografía
 
 
 
 
