#+title:Diseno Relacional II
#+date:<2020-02-03 Mon>
#+html_head: <title class="title">title</title><link rel="stylesheet" type="text/css" href="/res/org.css"/>
#+INFOJS_OPT: view:overview toc:t mouse:underline buttons:0 path:/res/org-info.js

* Algoritmos de normalización

  Supongamos que el diseñador de la base de datos definió un conjunto de
  dependencias funcionales F a partir de la semántica.

  A partir de dichas dependencias, nos interesa generar una descomposición lo
  menos redundante posible, preservando la información y las dependencias
  funcionales.

  A continuación describiremos una serie de algoritmos para convertir un esquema
  de base de datos a 3FN y a FNBC.

  Para ello será necesario introducir algunas definiciones previas relacionadas
  con los conjuntos de dependencias funcionales.

* Inferencia de dependencias funcionales

** Axiomas de Armstrong [ELM16 15.1.1]

   WW Armstrong propuso en 1974 tres reglas para inferir dependencias funcionales a
   partir de otras:
   - Axioma de reflexividad :: Y \subset X \implies X \rightarrow Y
   - Axioma de aumento ::  \forall W: X \rightarrow Y \implies XW \rightarrow YW
   - Axioma de transitividad ::  X \rightarrow Y \land Y \rightarrow Z \implies X
        \rightarrow Z

   Estos axiomas pueden ser probados a partir de la definición de dependencia
   funcional (ie no son axiomas in strictus sensus)

   Los tres axiomas en conjunto son ~completos~. Toda dependencia funcional que se
   puede inferir de F se puede inferir a través de los axiomas de Armstrong.

   La notación F \eq X \rightarrow Y indica que la dependencia funcional X -> Y
   puede inferirse a partir del conjunto de dependencias funcionales F.

   #+begin_quote Exceso de notación
   Cuando trabajemos con nombres de atributos abstractos como A,B,C,D o A_{1},
   A_{2},... y escribamos un conjunto de atributos (por ejemplo, {B,C,D}), dentro
   de una dependencia funcional, omitiremos las llaves y las comas. En dicho
   ejemplo, lo denotaremos directamente BCD.
   #+end_quote

   Ejercicio

   Muestre que dado el conjunto de dependencias funcionales F = { A -> C, BC ->
   E, D -> B} es posible inferir que AD -> E.

** Reglas de inferencia adicionales

   Las siguientes tres reglas se deducen de los axiomas de Armstrong:
   - Reglas de unión :: X -> Y \land X -> Z \implies X -> YZ
   - Reglas de pseudotransitividad ::  \forall W: X -> Y \land YW -> Z \implies
        XW -> Z
   - Reglas de descomposición :: X -> YZ \implies X -> Y \land X -> Z

* Clausuras de conjuntos de dependencias funcionales y de atributos

  Partimos de una relacion R(A1 A2 ... An)

  Dado un conjunto de dependencias funcionales F, la ~clausura de F (F^{+})~ es
  el conjunto de todas las dependencias funcionales que pueden inferirse de
  F. Esto es:

  $$F^{+} = {(X -> Y)|F \eq (X -> Y)}$$

  Dado un conjunto de atributos X y un conjunto de dependencias F, la ~clausura
  de X con respecto a F (X_{F}^{+})~ es el conjunto de todos los atributos A_{i}
  tales que la dependencia funcional X -> A_{i} se infiere del conjunto de
  dependencias F. Esto es:

  $$X_{F}^{+} = {A_{i} | F \eq (X -> A_{i})}$$

** Definiciones

   Las clausuras de conjuntos de atributos, $X_{F}^{ + }$, son una forma ordenada
   de construir $F^{+}$.

   Esta clausura nos permite dar otra definición de clave candidata: Dado un
   esquema de relacion R(A1 A2 ... An) y un conjunto de dependencias funcionales
   F, CK es clave candidata de R si y solo si CK_{F}^{+} = A1 A2 ... An y ningún
   subconjunto propio cumple con esa propiedad.

** Algoritmo 1 -  Clausura de un conjunto de atributos X con respecto a F [ELM16 16.1.1]

